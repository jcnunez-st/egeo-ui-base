/**
 * © 2017 Stratio Big Data Inc., Sucursal en España.
 *
 * This software is licensed under the Apache License, Version 2.0.
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the terms of the License for more details.
 *
 * SPDX-License-Identifier: Apache-2.0.
 */
@import '../utils/log';
@import '../settings/grid';

@mixin mq-code($mq) {
   .col-#{$mq},
   .col-#{$mq}-#{$egeo-grid---cols},
   .col-#{$mq}-offset-0,
   .col-#{$mq}-offset-#{$egeo-grid---cols} {
      box-sizing: border-box;
      flex: 0 0 auto;
      padding-right: $egeo-grid---half-gutter-width;
      padding-left: $egeo-grid---half-gutter-width;
   }

   .col-#{$mq} {
      flex-grow: 1;
      flex-basis: 0;
      max-width: 100%;
   }

   .col-#{$mq}-offset-0 {
      margin-left: 0;
   }

   @for $i from 1 to $egeo-grid---cols {
      $col-value: ((100 / $egeo-grid---cols) * $i) / 100;

      .col-#{$mq}-#{$i},
      .col-#{$mq}-offset-#{$i} {
         box-sizing: border-box;
         flex: 0 0 auto;
         padding-right: $egeo-grid---half-gutter-width;
         padding-left: $egeo-grid---half-gutter-width;
      }

      .col-#{$mq}-#{$i} {
         flex-basis: percentage($col-value);
         max-width: percentage($col-value);
      }

      .col-#{$mq}-offset-#{$i} {
         margin-left: percentage($col-value);
      }
   }

   .col-#{$mq}-#{$egeo-grid---cols} {
      flex-basis: 100%;
      max-width: 100%;
   }

   .start-#{$mq} {
      justify-content: flex-start;
      text-align: start;
   }

   .center-#{$mq} {
      justify-content: center;
      text-align: center;
   }

   .end-#{$mq} {
      justify-content: flex-end;
      text-align: end;
   }

   .top-#{$mq} {
      align-items: flex-start;
   }

   .middle-#{$mq} {
      align-items: center;
   }

   .bottom-#{$mq} {
      align-items: flex-end;
   }

   .around-#{$mq} {
      justify-content: space-around;
   }

   .between-#{$mq} {
      justify-content: space-between;
   }

   .first-#{$mq} {
      order: -1;
   }

   .last-#{$mq} {
      order: 1;
   }
}

@mixin egeo-grid {
   /* Egeo Grid based on flexboxgrid by @kristoferjoseph */

   .container-fluid,
   .container {
      margin-right: auto;
      margin-left: auto;
   }

   .container-fluid {
      padding-right: $egeo-grid---outer-margin;
      padding-left: $egeo-grid---outer-margin;
   }

   .row {
      box-sizing: border-box;
      display: flex;
      flex: 0 1 auto;
      flex-direction: row;
      flex-wrap: wrap;
   }

   .row.reverse {
      flex-direction: row-reverse;
   }

   .col.reverse {
      flex-direction: column-reverse;
   }

   // Creating the col system
   @each $mq in map-get($egeo-grid-config , mq) {
      // Default behavior, usually the xs configuration
      @if $mq == nth(map-get($egeo-grid-config, mq), 1) {
         @include mq-code($mq);
      }

      // MQ conditions are only needed from the second MQ, due to
      // the first one is the default one following the mobile
      // first approach (usually md and lg)
      @if $mq != nth(map-get($egeo-grid-config, mq), 1) {
         @media #{map-get(map-get($egeo-grid-config , viewports), $mq)} {
            .container {
               width: map-get(map-get($egeo-grid-config , containers), $mq);
            }

            @include mq-code($mq);
         }
      }

   }
}

@function egeo-get-vmin() {
   @return $egeo-grid---min;
}

@function egeo-get-vmax() {
   @return $egeo-grid---max;
}

@if $egeo-grid {
   @include egeo-grid();
}
