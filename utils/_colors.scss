/**
 * © 2017 Stratio Big Data Inc., Sucursal en España.
 *
 * This software is licensed under the Apache License, Version 2.0.
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the terms of the License for more details.
 *
 * SPDX-License-Identifier: Apache-2.0.
 */
// tools.colors
//
// A set of mixins and functions to work with colors.
//
// ### egeo-is-coloured($colors)
//
// <span class="tag tag--type">@mixin</span><span class="tag tag--tested">tested</span>
//
// Creates a set of modifier classes with the whole colors of a colors map passed as a parameter.
//
// * **$colors** - A Sass map of colors when the key is the name of the color and the value is the color itself.
// * **$type** - color/background
//
// <div class="compatibility">Compatibility untested.</div>
//
// ### egeo-get-color($color)
//
// <span class="tag tag--type">@function</span><span class="tag tag--tested">tested</span><span class="tag tag--danger">internal</span>
//
// Get a specific color of the Sass map of colors [$egeo-colors defined in settings.colors](section-2.html#section-2.1).
//
// * **$color** - The key of color we want to obtain from the [Sass map of colors](section-2.html#section-2.1).
//
// ## Dependencies
//
// * [settings.colors](section-2.html#section-2.1)
// * [tools.log](section-3.html#section-3.3): This library uses the logger tool to show debug info.
//
// Styleguide 3.1

@import '../settings/log';
@import '../settings/colors';

@import '../utils/log';

@mixin egeo-is-coloured($colors, $type: color) {
   @if type-of($colors) == 'map' {
      @each $key, $value in $colors {
         &--#{$key} {
            @if $type == color {
               color: $value;
            } @else if $type == background {
               background-color: $value;
            } @else {
               @if function-exists(egeo-log) {
                  @if egeo-log('@egeo-is-coloured::The second param #{type} is not a valid value. Only color or background are valid ones.', $egeo-log-warn) {
                     @return -1;
                  }
               }
            }
         }
      }
   } @else {
      @if egeo-log('@egeo-is-coloured::The first param is not a valid Sass map.', $egeo-log-warn) {
         @return -1;
      }
   }
}

@function egeo-get-color($color, $rgb: false, $alpha: 1) {
   $result: #000;

   @if ($rgb) {
      $result: egeo-get-rgb-color($color);
   } @else {
      @if global-variable-exists(egeo-colors) {
         @if type-of($egeo-colors) == 'map' {
            @if map-has-key($egeo-colors, $color) {
               $result: map-get($egeo-colors, $color);

            } @else {
               @if function-exists(egeo-log) {
                  @if egeo-log('@egeo-get-color::The color #{$color} not exist in $egeo-colors.', $egeo-log-error) {
                     @return -1;
                  }
               }
            }
         } @else {
            @if function-exists(egeo-log) {
               @if egeo-log('@egeo-get-color::The $egeo-colors variable is not a Sass map.', $egeo-log-error) {
                  @return -1;
               }
            }
         }
      } @else {
         @if function-exists(egeo-log) {
            @if egeo-log('@egeo-get-color::The Sass map $egeo-colors is not defined.', $egeo-log-error) {
               @return -1;
            }
         }
      }
   }

   @if ($alpha > 1) {
      @if egeo-log('@egeo-get-color::Alpha channel cannot be more than 1. Value::' + $alpha, $egeo-log-error) {
         @return -1;
      }
   }

   @if ($alpha > 0) {
      // sass-lint:disable no-color-literals
      $result: rgba(red($result), green($result), blue($result), $alpha);
   }

   @return $result;
}

@function egeo-get-rgb-color($color) {
   $result: #000;

   @if global-variable-exists(egeo-rgb-colors) {
      @if type-of($egeo-rgb-colors) == 'map' {
         @if map-has-key($egeo-rgb-colors, $color) {
            $result: map-get($egeo-rgb-colors, $color);
         } @else {
            @if function-exists(egeo-log) {
               @if egeo-log('@egeo-get-rgb-color::The color #{$color} not exist in $egeo-rgb-colors.', $egeo-log-error) {
                  @return -1;
               }
            }
         }
      } @else {
         @if function-exists(egeo-log) {
            @if egeo-log('@egeo-get-rgb-color::The $egeo-rgb-colors variable is not a Sass map.', $egeo-log-error) {
               @return -1;
            }
         }
      }
   } @else {
      @if function-exists(egeo-log) {
         @if egeo-log('@egeo-get-rgb-color::The Sass map $egeo-rgb-colors is not defined.', $egeo-log-error) {
            @return -1;
         }
      }
   }

   @return $result;
}
